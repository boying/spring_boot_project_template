<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boying.dao.book.BookDao">
    <sql id="allColumns">
        id,
        name,
        isbn,
        phone_number,
        updated_at,
        created_at,
        is_delete
    </sql>

    <sql id="allColumnsUpsert">
        name,
        isbn,
        phone_number,
        updated_at,
        created_at,
        is_delete
    </sql>

    <resultMap id="bookMap" type="boying.domain.book.Book">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="isbn" column="isbn"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

    <insert id="addBook" parameterType="boying.domain.book.Book" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO book(<include refid="allColumnsUpsert"/>)
        VALUES
        (#{name},#{isbn}, #{phoneNumber}, #{updatedAt}, #{createdAt}, #{isDelete})
    </insert>

    <update id="deleteBook">
        UPDATE book
        set is_delete = 1
        WHERE id = #{id}
    </update>

    <insert id="addBooks" parameterType="java.util.List" flushCache="true">
        INSERT INTO book(<include refid="allColumnsUpsert"/>)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{name},#{isbn}, #{phoneNumber}, #{updatedAt}, #{createdAt}, #{isDelete})
        </foreach>
    </insert>

    <update id="updateBook" parameterType="boying.domain.book.Book">
        UPDATE book SET
        name = #{name},
        isbn = #{isbn}
        WHERE id = #{id}
    </update>

    <select id="getBookById" resultMap="bookMap">
        SELECT
        <include refid="allColumns"/>
        FROM book
        WHERE id = #{id}
    </select>

    <select id="fuzzyQueryBooksByName" resultMap="bookMap" parameterType="java.lang.String">
        SELECT
        <include refid="allColumns"/>
        FROM book
        WHERE name like '%${name}%'
    </select>

     <update id="updateNameById">
        UPDATE book SET
        name = #{name}
        WHERE id = #{id}
    </update>

</mapper>
